class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        
        # first binary search finds the start of the range
        l = 0
        r= len(nums) - 1
        
        if not nums:
            return [-1,-1]
        
        
        while l < r:
            m = (l+r)//2
            if nums[m] < target:
                l = m + 1
            else:
                r = m
        
        
        if nums[l]==target:
            left = l
        else:
            left = -1
        
        
        
        #finds the end position of the element
        
        l = 0
        r = len(nums) - 1
        
        while l < r:
            
            #biasing the mid element calculation
            m = (l+r)//2+1
            if nums[m] > target:
                r = m-1
            else:
                l = m
        
        
        if nums[l]==target:
            right = l
        else:
            right = -1
                

                
        return [left, right]         
            
                
        
