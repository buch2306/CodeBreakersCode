class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
         
         #problem similar to activity selection problem
         #sorting the intervals array's end time

        intervals.sort(key=lambda x: x[0])
        
        #initializing an empty stack
        stack = []
        
        #if length of intervals is zero, then return an empty array
        if len(intervals)==0:
            return[]
        
        #appending the first elemen to the stack
        stack.append(intervals[0])
        
        
        #iterating through the elements
        for i in range(1, len(intervals)):
            
            #if next interval's start time is lesser than the end time of the stack's top element, then change the stack element's value accordingly
            if stack[-1][1] >= intervals[i][0]:
                stack[-1][1] = max(stack[-1][1], intervals[i][1])
            
            else:
                #if subsequent element's start time is lesser than the end time, then append to the stack
                stack.append(intervals[i])
        
        
        #returning the stack
        return stack
        
        
        
   
